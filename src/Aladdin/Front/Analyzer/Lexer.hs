module Aladdin.Front.Analyzer.Lexer where

import Aladdin.Front.Analyzer.Grammar
import Aladdin.Front.Header
import qualified Control.Monad.Trans.State.Strict as XState
import qualified Data.Functor.Identity as XIdentity
import qualified Data.Map.Strict as XMap
import qualified Data.Set as XSet


-- the following codes are generated by LGS.

data DFA
    = DFA
        { getInitialQOfDFA :: Int
        , getFinalQsOfDFA :: XMap.Map Int Int
        , getTransitionsOfDFA :: XMap.Map (Int, Char) Int
        , getMarkedQsOfDFA :: XMap.Map Int (XSet.Set Int)
        }
    deriving ()

runAladdinLexer :: String -> Either (Int, Int) [Token]
runAladdinLexer = doLexing . addLoc 1 1 where
    --  1: "\'\\"
    --  2: "\"" ([. \ '\\' \ '"' \ '\n'] + "\\" ['"' '\'' '\\' 'n' 't'])* "\\"
    --  3: "\'"
    --  4: "\"" ([. \ '\\' \ '"' \ '\n'] + "\\" ['"' '\'' '\\' 'n' 't'])* ([. \ '\\' \ '"' \ '\n']? + "\\" ['"' '\'' '\\' 'n' 't'])
    --  5: "\'" ([. \ '\\' \ '"' \ '\n'] + "\\" ['"' '\'' '\\' 'n' 't'])
    --  6: "?"
    --  7: ":"
    --  8: "="
    --  9: "-"
    -- 10: ""
    -- 11: "."
    -- 12: "->"
    -- 13: "=>"
    -- 14: "("
    -- 15: ")"
    -- 16: "["
    -- 17: "]"
    -- 18: "?-"
    -- 19: ","
    -- 20: ":-"
    -- 21: "s"
    -- 22: "pi"
    -- 23: "sigma"
    -- 24: "!"
    -- 25: "true"
    -- 26: "fail"
    -- 27: "\\"
    -- 28: "::"
    -- 29: "kind"
    -- 30: "type"
    -- 31: "p"
    -- 32: "sigm"
    -- 33: "tru"
    -- 34: "fai"
    -- 35: "kin"
    -- 36: "typ"
    -- 37: "sig"
    -- 38: "tr"
    -- 39: "fa"
    -- 40: "ki"
    -- 41: "ty"
    -- 42: "si"
    -- 43: "t"
    -- 44: "f"
    -- 45: "k"
    -- 46: ['a'-'e' 'g'-'j' 'l'-'o' 'q'-'r' 'u'-'z'] + "s" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) + "si" (['0'-'9' 'A'-'Z' '_' 'a'-'f' 'h'-'z'] + "g" (['0'-'9' 'A'-'Z' '_' 'a'-'l' 'n'-'z'] + "m" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'z']))) + "t" (['0'-'9' 'A'-'Z' '_' 'a'-'q' 's'-'x' 'z'] + "r" (['0'-'9' 'A'-'Z' '_' 'a'-'t' 'v'-'z'] + "u" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z'])) + "y" (['0'-'9' 'A'-'Z' '_' 'a'-'o' 'q'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z']))) + "f" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" (['0'-'9' 'A'-'Z' '_' 'a'-'k' 'm'-'z'] + "l" ['0'-'9' 'A'-'Z' '_' 'a'-'z']))) + "k" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" (['0'-'9' 'A'-'Z' '_' 'a'-'m' 'o'-'z'] + "n" (['0'-'9' 'A'-'Z' '_' 'a'-'c' 'e'-'z'] + "d" ['0'-'9' 'A'-'Z' '_' 'a'-'z']))) + (['a'-'e' 'g'-'j' 'l'-'o' 'q'-'r' 'u'-'z'] + "s" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) + "si" (['0'-'9' 'A'-'Z' '_' 'a'-'f' 'h'-'z'] + "g" (['0'-'9' 'A'-'Z' '_' 'a'-'l' 'n'-'z'] + "m" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'z']))) + "t" (['0'-'9' 'A'-'Z' '_' 'a'-'q' 's'-'x' 'z'] + "r" (['0'-'9' 'A'-'Z' '_' 'a'-'t' 'v'-'z'] + "u" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z'])) + "y" (['0'-'9' 'A'-'Z' '_' 'a'-'o' 'q'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z']))) + "f" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" (['0'-'9' 'A'-'Z' '_' 'a'-'k' 'm'-'z'] + "l" ['0'-'9' 'A'-'Z' '_' 'a'-'z']))) + "k" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" (['0'-'9' 'A'-'Z' '_' 'a'-'m' 'o'-'z'] + "n" (['0'-'9' 'A'-'Z' '_' 'a'-'c' 'e'-'z'] + "d" ['0'-'9' 'A'-'Z' '_' 'a'-'z'])))) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*
    -- 47: "_"
    -- 48: ['A'-'Z'] ['0'-'9' 'A'-'Z' '_' 'a'-'z']*
    -- 49: ['0'-'9']+
    -- 50: "\"" ([. \ '\\' \ '"' \ '\n'] + "\\" ['"' '\'' '\\' 'n' 't'])* "\""
    -- 51: "\'" ([. \ '\\' \ '"' \ '\n'] + "\\" ['"' '\'' '\\' 'n' 't']) "\'"
    -- 52: ['\n' ' ']+
    -- 53: "--" [. \ '\n']*
    theDFA :: DFA
    theDFA = DFA
        { getInitialQOfDFA = 10
        , getFinalQsOfDFA = XMap.fromAscList [(11, 1), (12, 2), (13, 3), (14, 4), (15, 5), (16, 6), (17, 7), (18, 8), (19, 9), (20, 11), (21, 12), (22, 13), (23, 14), (24, 15), (25, 16), (26, 17), (27, 18), (28, 19), (29, 20), (30, 21), (31, 22), (32, 22), (33, 22), (34, 22), (35, 22), (36, 22), (37, 22), (38, 22), (39, 22), (40, 22), (41, 22), (42, 22), (43, 22), (44, 22), (45, 22), (46, 22), (47, 23), (48, 23), (49, 24), (50, 25), (51, 26), (52, 27), (53, 28)]
        , getTransitionsOfDFA = XMap.fromAscList 
            [ ((1, '"'), 5), ((1, '\''), 5), ((1, '\\'), 5), ((1, 'n'), 5), ((1, 't'), 5)
            , ((2, '"'), 4), ((2, '\''), 4), ((2, '\\'), 4), ((2, 'n'), 4), ((2, 't'), 4)
            , ((3, ' '), 5), ((3, '!'), 5), ((3, '#'), 5), ((3, '$'), 5), ((3, '%'), 5), ((3, '&'), 5), ((3, '\''), 5), ((3, '('), 5), ((3, ')'), 5), ((3, '*'), 5), ((3, '+'), 5), ((3, ','), 5), ((3, '-'), 5), ((3, '.'), 5), ((3, '/'), 5), ((3, '0'), 5), ((3, '1'), 5), ((3, '2'), 5), ((3, '3'), 5), ((3, '4'), 5), ((3, '5'), 5), ((3, '6'), 5), ((3, '7'), 5), ((3, '8'), 5), ((3, '9'), 5), ((3, ':'), 5), ((3, ';'), 5), ((3, '<'), 5), ((3, '='), 5), ((3, '>'), 5), ((3, '?'), 5), ((3, '@'), 5), ((3, 'A'), 5), ((3, 'B'), 5), ((3, 'C'), 5), ((3, 'D'), 5), ((3, 'E'), 5), ((3, 'F'), 5), ((3, 'G'), 5), ((3, 'H'), 5), ((3, 'I'), 5), ((3, 'J'), 5), ((3, 'K'), 5), ((3, 'L'), 5), ((3, 'M'), 5), ((3, 'N'), 5), ((3, 'O'), 5), ((3, 'P'), 5), ((3, 'Q'), 5), ((3, 'R'), 5), ((3, 'S'), 5), ((3, 'T'), 5), ((3, 'U'), 5), ((3, 'V'), 5), ((3, 'W'), 5), ((3, 'X'), 5), ((3, 'Y'), 5), ((3, 'Z'), 5), ((3, '['), 5), ((3, '\\'), 1), ((3, ']'), 5), ((3, '^'), 5), ((3, '_'), 5), ((3, '`'), 5), ((3, 'a'), 5), ((3, 'b'), 5), ((3, 'c'), 5), ((3, 'd'), 5), ((3, 'e'), 5), ((3, 'f'), 5), ((3, 'g'), 5), ((3, 'h'), 5), ((3, 'i'), 5), ((3, 'j'), 5), ((3, 'k'), 5), ((3, 'l'), 5), ((3, 'm'), 5), ((3, 'n'), 5), ((3, 'o'), 5), ((3, 'p'), 5), ((3, 'q'), 5), ((3, 'r'), 5), ((3, 's'), 5), ((3, 't'), 5), ((3, 'u'), 5), ((3, 'v'), 5), ((3, 'w'), 5), ((3, 'x'), 5), ((3, 'y'), 5), ((3, 'z'), 5), ((3, '{'), 5), ((3, '|'), 5), ((3, '}'), 5), ((3, '~'), 5)
            , ((4, ' '), 4), ((4, '!'), 4), ((4, '"'), 50), ((4, '#'), 4), ((4, '$'), 4), ((4, '%'), 4), ((4, '&'), 4), ((4, '\''), 4), ((4, '('), 4), ((4, ')'), 4), ((4, '*'), 4), ((4, '+'), 4), ((4, ','), 4), ((4, '-'), 4), ((4, '.'), 4), ((4, '/'), 4), ((4, '0'), 4), ((4, '1'), 4), ((4, '2'), 4), ((4, '3'), 4), ((4, '4'), 4), ((4, '5'), 4), ((4, '6'), 4), ((4, '7'), 4), ((4, '8'), 4), ((4, '9'), 4), ((4, ':'), 4), ((4, ';'), 4), ((4, '<'), 4), ((4, '='), 4), ((4, '>'), 4), ((4, '?'), 4), ((4, '@'), 4), ((4, 'A'), 4), ((4, 'B'), 4), ((4, 'C'), 4), ((4, 'D'), 4), ((4, 'E'), 4), ((4, 'F'), 4), ((4, 'G'), 4), ((4, 'H'), 4), ((4, 'I'), 4), ((4, 'J'), 4), ((4, 'K'), 4), ((4, 'L'), 4), ((4, 'M'), 4), ((4, 'N'), 4), ((4, 'O'), 4), ((4, 'P'), 4), ((4, 'Q'), 4), ((4, 'R'), 4), ((4, 'S'), 4), ((4, 'T'), 4), ((4, 'U'), 4), ((4, 'V'), 4), ((4, 'W'), 4), ((4, 'X'), 4), ((4, 'Y'), 4), ((4, 'Z'), 4), ((4, '['), 4), ((4, '\\'), 2), ((4, ']'), 4), ((4, '^'), 4), ((4, '_'), 4), ((4, '`'), 4), ((4, 'a'), 4), ((4, 'b'), 4), ((4, 'c'), 4), ((4, 'd'), 4), ((4, 'e'), 4), ((4, 'f'), 4), ((4, 'g'), 4), ((4, 'h'), 4), ((4, 'i'), 4), ((4, 'j'), 4), ((4, 'k'), 4), ((4, 'l'), 4), ((4, 'm'), 4), ((4, 'n'), 4), ((4, 'o'), 4), ((4, 'p'), 4), ((4, 'q'), 4), ((4, 'r'), 4), ((4, 's'), 4), ((4, 't'), 4), ((4, 'u'), 4), ((4, 'v'), 4), ((4, 'w'), 4), ((4, 'x'), 4), ((4, 'y'), 4), ((4, 'z'), 4), ((4, '{'), 4), ((4, '|'), 4), ((4, '}'), 4), ((4, '~'), 4)
            , ((5, '\''), 51)
            , ((6, '-'), 18)
            , ((7, '-'), 20), ((7, ':'), 28)
            , ((8, '>'), 13)
            , ((9, '-'), 53), ((9, '>'), 12)
            , ((10, '\n'), 52), ((10, ' '), 52), ((10, '!'), 24), ((10, '"'), 4), ((10, '\''), 3), ((10, '('), 14), ((10, ')'), 15), ((10, ','), 19), ((10, '-'), 9), ((10, '.'), 11), ((10, '0'), 49), ((10, '1'), 49), ((10, '2'), 49), ((10, '3'), 49), ((10, '4'), 49), ((10, '5'), 49), ((10, '6'), 49), ((10, '7'), 49), ((10, '8'), 49), ((10, '9'), 49), ((10, ':'), 7), ((10, '='), 8), ((10, '?'), 6), ((10, 'A'), 48), ((10, 'B'), 48), ((10, 'C'), 48), ((10, 'D'), 48), ((10, 'E'), 48), ((10, 'F'), 48), ((10, 'G'), 48), ((10, 'H'), 48), ((10, 'I'), 48), ((10, 'J'), 48), ((10, 'K'), 48), ((10, 'L'), 48), ((10, 'M'), 48), ((10, 'N'), 48), ((10, 'O'), 48), ((10, 'P'), 48), ((10, 'Q'), 48), ((10, 'R'), 48), ((10, 'S'), 48), ((10, 'T'), 48), ((10, 'U'), 48), ((10, 'V'), 48), ((10, 'W'), 48), ((10, 'X'), 48), ((10, 'Y'), 48), ((10, 'Z'), 48), ((10, '['), 16), ((10, '\\'), 27), ((10, ']'), 17), ((10, '_'), 47), ((10, 'a'), 46), ((10, 'b'), 46), ((10, 'c'), 46), ((10, 'd'), 46), ((10, 'e'), 46), ((10, 'f'), 44), ((10, 'g'), 46), ((10, 'h'), 46), ((10, 'i'), 46), ((10, 'j'), 46), ((10, 'k'), 45), ((10, 'l'), 46), ((10, 'm'), 46), ((10, 'n'), 46), ((10, 'o'), 46), ((10, 'p'), 31), ((10, 'q'), 46), ((10, 'r'), 46), ((10, 's'), 21), ((10, 't'), 43), ((10, 'u'), 46), ((10, 'v'), 46), ((10, 'w'), 46), ((10, 'x'), 46), ((10, 'y'), 46), ((10, 'z'), 46)
            , ((21, '0'), 46), ((21, '1'), 46), ((21, '2'), 46), ((21, '3'), 46), ((21, '4'), 46), ((21, '5'), 46), ((21, '6'), 46), ((21, '7'), 46), ((21, '8'), 46), ((21, '9'), 46), ((21, 'A'), 46), ((21, 'B'), 46), ((21, 'C'), 46), ((21, 'D'), 46), ((21, 'E'), 46), ((21, 'F'), 46), ((21, 'G'), 46), ((21, 'H'), 46), ((21, 'I'), 46), ((21, 'J'), 46), ((21, 'K'), 46), ((21, 'L'), 46), ((21, 'M'), 46), ((21, 'N'), 46), ((21, 'O'), 46), ((21, 'P'), 46), ((21, 'Q'), 46), ((21, 'R'), 46), ((21, 'S'), 46), ((21, 'T'), 46), ((21, 'U'), 46), ((21, 'V'), 46), ((21, 'W'), 46), ((21, 'X'), 46), ((21, 'Y'), 46), ((21, 'Z'), 46), ((21, '_'), 46), ((21, 'a'), 46), ((21, 'b'), 46), ((21, 'c'), 46), ((21, 'd'), 46), ((21, 'e'), 46), ((21, 'f'), 46), ((21, 'g'), 46), ((21, 'h'), 46), ((21, 'i'), 42), ((21, 'j'), 46), ((21, 'k'), 46), ((21, 'l'), 46), ((21, 'm'), 46), ((21, 'n'), 46), ((21, 'o'), 46), ((21, 'p'), 46), ((21, 'q'), 46), ((21, 'r'), 46), ((21, 's'), 46), ((21, 't'), 46), ((21, 'u'), 46), ((21, 'v'), 46), ((21, 'w'), 46), ((21, 'x'), 46), ((21, 'y'), 46), ((21, 'z'), 46)
            , ((22, '0'), 46), ((22, '1'), 46), ((22, '2'), 46), ((22, '3'), 46), ((22, '4'), 46), ((22, '5'), 46), ((22, '6'), 46), ((22, '7'), 46), ((22, '8'), 46), ((22, '9'), 46), ((22, 'A'), 46), ((22, 'B'), 46), ((22, 'C'), 46), ((22, 'D'), 46), ((22, 'E'), 46), ((22, 'F'), 46), ((22, 'G'), 46), ((22, 'H'), 46), ((22, 'I'), 46), ((22, 'J'), 46), ((22, 'K'), 46), ((22, 'L'), 46), ((22, 'M'), 46), ((22, 'N'), 46), ((22, 'O'), 46), ((22, 'P'), 46), ((22, 'Q'), 46), ((22, 'R'), 46), ((22, 'S'), 46), ((22, 'T'), 46), ((22, 'U'), 46), ((22, 'V'), 46), ((22, 'W'), 46), ((22, 'X'), 46), ((22, 'Y'), 46), ((22, 'Z'), 46), ((22, '_'), 46), ((22, 'a'), 46), ((22, 'b'), 46), ((22, 'c'), 46), ((22, 'd'), 46), ((22, 'e'), 46), ((22, 'f'), 46), ((22, 'g'), 46), ((22, 'h'), 46), ((22, 'i'), 46), ((22, 'j'), 46), ((22, 'k'), 46), ((22, 'l'), 46), ((22, 'm'), 46), ((22, 'n'), 46), ((22, 'o'), 46), ((22, 'p'), 46), ((22, 'q'), 46), ((22, 'r'), 46), ((22, 's'), 46), ((22, 't'), 46), ((22, 'u'), 46), ((22, 'v'), 46), ((22, 'w'), 46), ((22, 'x'), 46), ((22, 'y'), 46), ((22, 'z'), 46)
            , ((23, '0'), 46), ((23, '1'), 46), ((23, '2'), 46), ((23, '3'), 46), ((23, '4'), 46), ((23, '5'), 46), ((23, '6'), 46), ((23, '7'), 46), ((23, '8'), 46), ((23, '9'), 46), ((23, 'A'), 46), ((23, 'B'), 46), ((23, 'C'), 46), ((23, 'D'), 46), ((23, 'E'), 46), ((23, 'F'), 46), ((23, 'G'), 46), ((23, 'H'), 46), ((23, 'I'), 46), ((23, 'J'), 46), ((23, 'K'), 46), ((23, 'L'), 46), ((23, 'M'), 46), ((23, 'N'), 46), ((23, 'O'), 46), ((23, 'P'), 46), ((23, 'Q'), 46), ((23, 'R'), 46), ((23, 'S'), 46), ((23, 'T'), 46), ((23, 'U'), 46), ((23, 'V'), 46), ((23, 'W'), 46), ((23, 'X'), 46), ((23, 'Y'), 46), ((23, 'Z'), 46), ((23, '_'), 46), ((23, 'a'), 46), ((23, 'b'), 46), ((23, 'c'), 46), ((23, 'd'), 46), ((23, 'e'), 46), ((23, 'f'), 46), ((23, 'g'), 46), ((23, 'h'), 46), ((23, 'i'), 46), ((23, 'j'), 46), ((23, 'k'), 46), ((23, 'l'), 46), ((23, 'm'), 46), ((23, 'n'), 46), ((23, 'o'), 46), ((23, 'p'), 46), ((23, 'q'), 46), ((23, 'r'), 46), ((23, 's'), 46), ((23, 't'), 46), ((23, 'u'), 46), ((23, 'v'), 46), ((23, 'w'), 46), ((23, 'x'), 46), ((23, 'y'), 46), ((23, 'z'), 46)
            , ((25, '0'), 46), ((25, '1'), 46), ((25, '2'), 46), ((25, '3'), 46), ((25, '4'), 46), ((25, '5'), 46), ((25, '6'), 46), ((25, '7'), 46), ((25, '8'), 46), ((25, '9'), 46), ((25, 'A'), 46), ((25, 'B'), 46), ((25, 'C'), 46), ((25, 'D'), 46), ((25, 'E'), 46), ((25, 'F'), 46), ((25, 'G'), 46), ((25, 'H'), 46), ((25, 'I'), 46), ((25, 'J'), 46), ((25, 'K'), 46), ((25, 'L'), 46), ((25, 'M'), 46), ((25, 'N'), 46), ((25, 'O'), 46), ((25, 'P'), 46), ((25, 'Q'), 46), ((25, 'R'), 46), ((25, 'S'), 46), ((25, 'T'), 46), ((25, 'U'), 46), ((25, 'V'), 46), ((25, 'W'), 46), ((25, 'X'), 46), ((25, 'Y'), 46), ((25, 'Z'), 46), ((25, '_'), 46), ((25, 'a'), 46), ((25, 'b'), 46), ((25, 'c'), 46), ((25, 'd'), 46), ((25, 'e'), 46), ((25, 'f'), 46), ((25, 'g'), 46), ((25, 'h'), 46), ((25, 'i'), 46), ((25, 'j'), 46), ((25, 'k'), 46), ((25, 'l'), 46), ((25, 'm'), 46), ((25, 'n'), 46), ((25, 'o'), 46), ((25, 'p'), 46), ((25, 'q'), 46), ((25, 'r'), 46), ((25, 's'), 46), ((25, 't'), 46), ((25, 'u'), 46), ((25, 'v'), 46), ((25, 'w'), 46), ((25, 'x'), 46), ((25, 'y'), 46), ((25, 'z'), 46)
            , ((26, '0'), 46), ((26, '1'), 46), ((26, '2'), 46), ((26, '3'), 46), ((26, '4'), 46), ((26, '5'), 46), ((26, '6'), 46), ((26, '7'), 46), ((26, '8'), 46), ((26, '9'), 46), ((26, 'A'), 46), ((26, 'B'), 46), ((26, 'C'), 46), ((26, 'D'), 46), ((26, 'E'), 46), ((26, 'F'), 46), ((26, 'G'), 46), ((26, 'H'), 46), ((26, 'I'), 46), ((26, 'J'), 46), ((26, 'K'), 46), ((26, 'L'), 46), ((26, 'M'), 46), ((26, 'N'), 46), ((26, 'O'), 46), ((26, 'P'), 46), ((26, 'Q'), 46), ((26, 'R'), 46), ((26, 'S'), 46), ((26, 'T'), 46), ((26, 'U'), 46), ((26, 'V'), 46), ((26, 'W'), 46), ((26, 'X'), 46), ((26, 'Y'), 46), ((26, 'Z'), 46), ((26, '_'), 46), ((26, 'a'), 46), ((26, 'b'), 46), ((26, 'c'), 46), ((26, 'd'), 46), ((26, 'e'), 46), ((26, 'f'), 46), ((26, 'g'), 46), ((26, 'h'), 46), ((26, 'i'), 46), ((26, 'j'), 46), ((26, 'k'), 46), ((26, 'l'), 46), ((26, 'm'), 46), ((26, 'n'), 46), ((26, 'o'), 46), ((26, 'p'), 46), ((26, 'q'), 46), ((26, 'r'), 46), ((26, 's'), 46), ((26, 't'), 46), ((26, 'u'), 46), ((26, 'v'), 46), ((26, 'w'), 46), ((26, 'x'), 46), ((26, 'y'), 46), ((26, 'z'), 46)
            , ((29, '0'), 46), ((29, '1'), 46), ((29, '2'), 46), ((29, '3'), 46), ((29, '4'), 46), ((29, '5'), 46), ((29, '6'), 46), ((29, '7'), 46), ((29, '8'), 46), ((29, '9'), 46), ((29, 'A'), 46), ((29, 'B'), 46), ((29, 'C'), 46), ((29, 'D'), 46), ((29, 'E'), 46), ((29, 'F'), 46), ((29, 'G'), 46), ((29, 'H'), 46), ((29, 'I'), 46), ((29, 'J'), 46), ((29, 'K'), 46), ((29, 'L'), 46), ((29, 'M'), 46), ((29, 'N'), 46), ((29, 'O'), 46), ((29, 'P'), 46), ((29, 'Q'), 46), ((29, 'R'), 46), ((29, 'S'), 46), ((29, 'T'), 46), ((29, 'U'), 46), ((29, 'V'), 46), ((29, 'W'), 46), ((29, 'X'), 46), ((29, 'Y'), 46), ((29, 'Z'), 46), ((29, '_'), 46), ((29, 'a'), 46), ((29, 'b'), 46), ((29, 'c'), 46), ((29, 'd'), 46), ((29, 'e'), 46), ((29, 'f'), 46), ((29, 'g'), 46), ((29, 'h'), 46), ((29, 'i'), 46), ((29, 'j'), 46), ((29, 'k'), 46), ((29, 'l'), 46), ((29, 'm'), 46), ((29, 'n'), 46), ((29, 'o'), 46), ((29, 'p'), 46), ((29, 'q'), 46), ((29, 'r'), 46), ((29, 's'), 46), ((29, 't'), 46), ((29, 'u'), 46), ((29, 'v'), 46), ((29, 'w'), 46), ((29, 'x'), 46), ((29, 'y'), 46), ((29, 'z'), 46)
            , ((30, '0'), 46), ((30, '1'), 46), ((30, '2'), 46), ((30, '3'), 46), ((30, '4'), 46), ((30, '5'), 46), ((30, '6'), 46), ((30, '7'), 46), ((30, '8'), 46), ((30, '9'), 46), ((30, 'A'), 46), ((30, 'B'), 46), ((30, 'C'), 46), ((30, 'D'), 46), ((30, 'E'), 46), ((30, 'F'), 46), ((30, 'G'), 46), ((30, 'H'), 46), ((30, 'I'), 46), ((30, 'J'), 46), ((30, 'K'), 46), ((30, 'L'), 46), ((30, 'M'), 46), ((30, 'N'), 46), ((30, 'O'), 46), ((30, 'P'), 46), ((30, 'Q'), 46), ((30, 'R'), 46), ((30, 'S'), 46), ((30, 'T'), 46), ((30, 'U'), 46), ((30, 'V'), 46), ((30, 'W'), 46), ((30, 'X'), 46), ((30, 'Y'), 46), ((30, 'Z'), 46), ((30, '_'), 46), ((30, 'a'), 46), ((30, 'b'), 46), ((30, 'c'), 46), ((30, 'd'), 46), ((30, 'e'), 46), ((30, 'f'), 46), ((30, 'g'), 46), ((30, 'h'), 46), ((30, 'i'), 46), ((30, 'j'), 46), ((30, 'k'), 46), ((30, 'l'), 46), ((30, 'm'), 46), ((30, 'n'), 46), ((30, 'o'), 46), ((30, 'p'), 46), ((30, 'q'), 46), ((30, 'r'), 46), ((30, 's'), 46), ((30, 't'), 46), ((30, 'u'), 46), ((30, 'v'), 46), ((30, 'w'), 46), ((30, 'x'), 46), ((30, 'y'), 46), ((30, 'z'), 46)
            , ((31, '0'), 46), ((31, '1'), 46), ((31, '2'), 46), ((31, '3'), 46), ((31, '4'), 46), ((31, '5'), 46), ((31, '6'), 46), ((31, '7'), 46), ((31, '8'), 46), ((31, '9'), 46), ((31, 'A'), 46), ((31, 'B'), 46), ((31, 'C'), 46), ((31, 'D'), 46), ((31, 'E'), 46), ((31, 'F'), 46), ((31, 'G'), 46), ((31, 'H'), 46), ((31, 'I'), 46), ((31, 'J'), 46), ((31, 'K'), 46), ((31, 'L'), 46), ((31, 'M'), 46), ((31, 'N'), 46), ((31, 'O'), 46), ((31, 'P'), 46), ((31, 'Q'), 46), ((31, 'R'), 46), ((31, 'S'), 46), ((31, 'T'), 46), ((31, 'U'), 46), ((31, 'V'), 46), ((31, 'W'), 46), ((31, 'X'), 46), ((31, 'Y'), 46), ((31, 'Z'), 46), ((31, '_'), 46), ((31, 'a'), 46), ((31, 'b'), 46), ((31, 'c'), 46), ((31, 'd'), 46), ((31, 'e'), 46), ((31, 'f'), 46), ((31, 'g'), 46), ((31, 'h'), 46), ((31, 'i'), 22), ((31, 'j'), 46), ((31, 'k'), 46), ((31, 'l'), 46), ((31, 'm'), 46), ((31, 'n'), 46), ((31, 'o'), 46), ((31, 'p'), 46), ((31, 'q'), 46), ((31, 'r'), 46), ((31, 's'), 46), ((31, 't'), 46), ((31, 'u'), 46), ((31, 'v'), 46), ((31, 'w'), 46), ((31, 'x'), 46), ((31, 'y'), 46), ((31, 'z'), 46)
            , ((32, '0'), 46), ((32, '1'), 46), ((32, '2'), 46), ((32, '3'), 46), ((32, '4'), 46), ((32, '5'), 46), ((32, '6'), 46), ((32, '7'), 46), ((32, '8'), 46), ((32, '9'), 46), ((32, 'A'), 46), ((32, 'B'), 46), ((32, 'C'), 46), ((32, 'D'), 46), ((32, 'E'), 46), ((32, 'F'), 46), ((32, 'G'), 46), ((32, 'H'), 46), ((32, 'I'), 46), ((32, 'J'), 46), ((32, 'K'), 46), ((32, 'L'), 46), ((32, 'M'), 46), ((32, 'N'), 46), ((32, 'O'), 46), ((32, 'P'), 46), ((32, 'Q'), 46), ((32, 'R'), 46), ((32, 'S'), 46), ((32, 'T'), 46), ((32, 'U'), 46), ((32, 'V'), 46), ((32, 'W'), 46), ((32, 'X'), 46), ((32, 'Y'), 46), ((32, 'Z'), 46), ((32, '_'), 46), ((32, 'a'), 23), ((32, 'b'), 46), ((32, 'c'), 46), ((32, 'd'), 46), ((32, 'e'), 46), ((32, 'f'), 46), ((32, 'g'), 46), ((32, 'h'), 46), ((32, 'i'), 46), ((32, 'j'), 46), ((32, 'k'), 46), ((32, 'l'), 46), ((32, 'm'), 46), ((32, 'n'), 46), ((32, 'o'), 46), ((32, 'p'), 46), ((32, 'q'), 46), ((32, 'r'), 46), ((32, 's'), 46), ((32, 't'), 46), ((32, 'u'), 46), ((32, 'v'), 46), ((32, 'w'), 46), ((32, 'x'), 46), ((32, 'y'), 46), ((32, 'z'), 46)
            , ((33, '0'), 46), ((33, '1'), 46), ((33, '2'), 46), ((33, '3'), 46), ((33, '4'), 46), ((33, '5'), 46), ((33, '6'), 46), ((33, '7'), 46), ((33, '8'), 46), ((33, '9'), 46), ((33, 'A'), 46), ((33, 'B'), 46), ((33, 'C'), 46), ((33, 'D'), 46), ((33, 'E'), 46), ((33, 'F'), 46), ((33, 'G'), 46), ((33, 'H'), 46), ((33, 'I'), 46), ((33, 'J'), 46), ((33, 'K'), 46), ((33, 'L'), 46), ((33, 'M'), 46), ((33, 'N'), 46), ((33, 'O'), 46), ((33, 'P'), 46), ((33, 'Q'), 46), ((33, 'R'), 46), ((33, 'S'), 46), ((33, 'T'), 46), ((33, 'U'), 46), ((33, 'V'), 46), ((33, 'W'), 46), ((33, 'X'), 46), ((33, 'Y'), 46), ((33, 'Z'), 46), ((33, '_'), 46), ((33, 'a'), 46), ((33, 'b'), 46), ((33, 'c'), 46), ((33, 'd'), 46), ((33, 'e'), 25), ((33, 'f'), 46), ((33, 'g'), 46), ((33, 'h'), 46), ((33, 'i'), 46), ((33, 'j'), 46), ((33, 'k'), 46), ((33, 'l'), 46), ((33, 'm'), 46), ((33, 'n'), 46), ((33, 'o'), 46), ((33, 'p'), 46), ((33, 'q'), 46), ((33, 'r'), 46), ((33, 's'), 46), ((33, 't'), 46), ((33, 'u'), 46), ((33, 'v'), 46), ((33, 'w'), 46), ((33, 'x'), 46), ((33, 'y'), 46), ((33, 'z'), 46)
            , ((34, '0'), 46), ((34, '1'), 46), ((34, '2'), 46), ((34, '3'), 46), ((34, '4'), 46), ((34, '5'), 46), ((34, '6'), 46), ((34, '7'), 46), ((34, '8'), 46), ((34, '9'), 46), ((34, 'A'), 46), ((34, 'B'), 46), ((34, 'C'), 46), ((34, 'D'), 46), ((34, 'E'), 46), ((34, 'F'), 46), ((34, 'G'), 46), ((34, 'H'), 46), ((34, 'I'), 46), ((34, 'J'), 46), ((34, 'K'), 46), ((34, 'L'), 46), ((34, 'M'), 46), ((34, 'N'), 46), ((34, 'O'), 46), ((34, 'P'), 46), ((34, 'Q'), 46), ((34, 'R'), 46), ((34, 'S'), 46), ((34, 'T'), 46), ((34, 'U'), 46), ((34, 'V'), 46), ((34, 'W'), 46), ((34, 'X'), 46), ((34, 'Y'), 46), ((34, 'Z'), 46), ((34, '_'), 46), ((34, 'a'), 46), ((34, 'b'), 46), ((34, 'c'), 46), ((34, 'd'), 46), ((34, 'e'), 46), ((34, 'f'), 46), ((34, 'g'), 46), ((34, 'h'), 46), ((34, 'i'), 46), ((34, 'j'), 46), ((34, 'k'), 46), ((34, 'l'), 26), ((34, 'm'), 46), ((34, 'n'), 46), ((34, 'o'), 46), ((34, 'p'), 46), ((34, 'q'), 46), ((34, 'r'), 46), ((34, 's'), 46), ((34, 't'), 46), ((34, 'u'), 46), ((34, 'v'), 46), ((34, 'w'), 46), ((34, 'x'), 46), ((34, 'y'), 46), ((34, 'z'), 46)
            , ((35, '0'), 46), ((35, '1'), 46), ((35, '2'), 46), ((35, '3'), 46), ((35, '4'), 46), ((35, '5'), 46), ((35, '6'), 46), ((35, '7'), 46), ((35, '8'), 46), ((35, '9'), 46), ((35, 'A'), 46), ((35, 'B'), 46), ((35, 'C'), 46), ((35, 'D'), 46), ((35, 'E'), 46), ((35, 'F'), 46), ((35, 'G'), 46), ((35, 'H'), 46), ((35, 'I'), 46), ((35, 'J'), 46), ((35, 'K'), 46), ((35, 'L'), 46), ((35, 'M'), 46), ((35, 'N'), 46), ((35, 'O'), 46), ((35, 'P'), 46), ((35, 'Q'), 46), ((35, 'R'), 46), ((35, 'S'), 46), ((35, 'T'), 46), ((35, 'U'), 46), ((35, 'V'), 46), ((35, 'W'), 46), ((35, 'X'), 46), ((35, 'Y'), 46), ((35, 'Z'), 46), ((35, '_'), 46), ((35, 'a'), 46), ((35, 'b'), 46), ((35, 'c'), 46), ((35, 'd'), 29), ((35, 'e'), 46), ((35, 'f'), 46), ((35, 'g'), 46), ((35, 'h'), 46), ((35, 'i'), 46), ((35, 'j'), 46), ((35, 'k'), 46), ((35, 'l'), 46), ((35, 'm'), 46), ((35, 'n'), 46), ((35, 'o'), 46), ((35, 'p'), 46), ((35, 'q'), 46), ((35, 'r'), 46), ((35, 's'), 46), ((35, 't'), 46), ((35, 'u'), 46), ((35, 'v'), 46), ((35, 'w'), 46), ((35, 'x'), 46), ((35, 'y'), 46), ((35, 'z'), 46)
            , ((36, '0'), 46), ((36, '1'), 46), ((36, '2'), 46), ((36, '3'), 46), ((36, '4'), 46), ((36, '5'), 46), ((36, '6'), 46), ((36, '7'), 46), ((36, '8'), 46), ((36, '9'), 46), ((36, 'A'), 46), ((36, 'B'), 46), ((36, 'C'), 46), ((36, 'D'), 46), ((36, 'E'), 46), ((36, 'F'), 46), ((36, 'G'), 46), ((36, 'H'), 46), ((36, 'I'), 46), ((36, 'J'), 46), ((36, 'K'), 46), ((36, 'L'), 46), ((36, 'M'), 46), ((36, 'N'), 46), ((36, 'O'), 46), ((36, 'P'), 46), ((36, 'Q'), 46), ((36, 'R'), 46), ((36, 'S'), 46), ((36, 'T'), 46), ((36, 'U'), 46), ((36, 'V'), 46), ((36, 'W'), 46), ((36, 'X'), 46), ((36, 'Y'), 46), ((36, 'Z'), 46), ((36, '_'), 46), ((36, 'a'), 46), ((36, 'b'), 46), ((36, 'c'), 46), ((36, 'd'), 46), ((36, 'e'), 30), ((36, 'f'), 46), ((36, 'g'), 46), ((36, 'h'), 46), ((36, 'i'), 46), ((36, 'j'), 46), ((36, 'k'), 46), ((36, 'l'), 46), ((36, 'm'), 46), ((36, 'n'), 46), ((36, 'o'), 46), ((36, 'p'), 46), ((36, 'q'), 46), ((36, 'r'), 46), ((36, 's'), 46), ((36, 't'), 46), ((36, 'u'), 46), ((36, 'v'), 46), ((36, 'w'), 46), ((36, 'x'), 46), ((36, 'y'), 46), ((36, 'z'), 46)
            , ((37, '0'), 46), ((37, '1'), 46), ((37, '2'), 46), ((37, '3'), 46), ((37, '4'), 46), ((37, '5'), 46), ((37, '6'), 46), ((37, '7'), 46), ((37, '8'), 46), ((37, '9'), 46), ((37, 'A'), 46), ((37, 'B'), 46), ((37, 'C'), 46), ((37, 'D'), 46), ((37, 'E'), 46), ((37, 'F'), 46), ((37, 'G'), 46), ((37, 'H'), 46), ((37, 'I'), 46), ((37, 'J'), 46), ((37, 'K'), 46), ((37, 'L'), 46), ((37, 'M'), 46), ((37, 'N'), 46), ((37, 'O'), 46), ((37, 'P'), 46), ((37, 'Q'), 46), ((37, 'R'), 46), ((37, 'S'), 46), ((37, 'T'), 46), ((37, 'U'), 46), ((37, 'V'), 46), ((37, 'W'), 46), ((37, 'X'), 46), ((37, 'Y'), 46), ((37, 'Z'), 46), ((37, '_'), 46), ((37, 'a'), 46), ((37, 'b'), 46), ((37, 'c'), 46), ((37, 'd'), 46), ((37, 'e'), 46), ((37, 'f'), 46), ((37, 'g'), 46), ((37, 'h'), 46), ((37, 'i'), 46), ((37, 'j'), 46), ((37, 'k'), 46), ((37, 'l'), 46), ((37, 'm'), 32), ((37, 'n'), 46), ((37, 'o'), 46), ((37, 'p'), 46), ((37, 'q'), 46), ((37, 'r'), 46), ((37, 's'), 46), ((37, 't'), 46), ((37, 'u'), 46), ((37, 'v'), 46), ((37, 'w'), 46), ((37, 'x'), 46), ((37, 'y'), 46), ((37, 'z'), 46)
            , ((38, '0'), 46), ((38, '1'), 46), ((38, '2'), 46), ((38, '3'), 46), ((38, '4'), 46), ((38, '5'), 46), ((38, '6'), 46), ((38, '7'), 46), ((38, '8'), 46), ((38, '9'), 46), ((38, 'A'), 46), ((38, 'B'), 46), ((38, 'C'), 46), ((38, 'D'), 46), ((38, 'E'), 46), ((38, 'F'), 46), ((38, 'G'), 46), ((38, 'H'), 46), ((38, 'I'), 46), ((38, 'J'), 46), ((38, 'K'), 46), ((38, 'L'), 46), ((38, 'M'), 46), ((38, 'N'), 46), ((38, 'O'), 46), ((38, 'P'), 46), ((38, 'Q'), 46), ((38, 'R'), 46), ((38, 'S'), 46), ((38, 'T'), 46), ((38, 'U'), 46), ((38, 'V'), 46), ((38, 'W'), 46), ((38, 'X'), 46), ((38, 'Y'), 46), ((38, 'Z'), 46), ((38, '_'), 46), ((38, 'a'), 46), ((38, 'b'), 46), ((38, 'c'), 46), ((38, 'd'), 46), ((38, 'e'), 46), ((38, 'f'), 46), ((38, 'g'), 46), ((38, 'h'), 46), ((38, 'i'), 46), ((38, 'j'), 46), ((38, 'k'), 46), ((38, 'l'), 46), ((38, 'm'), 46), ((38, 'n'), 46), ((38, 'o'), 46), ((38, 'p'), 46), ((38, 'q'), 46), ((38, 'r'), 46), ((38, 's'), 46), ((38, 't'), 46), ((38, 'u'), 33), ((38, 'v'), 46), ((38, 'w'), 46), ((38, 'x'), 46), ((38, 'y'), 46), ((38, 'z'), 46)
            , ((39, '0'), 46), ((39, '1'), 46), ((39, '2'), 46), ((39, '3'), 46), ((39, '4'), 46), ((39, '5'), 46), ((39, '6'), 46), ((39, '7'), 46), ((39, '8'), 46), ((39, '9'), 46), ((39, 'A'), 46), ((39, 'B'), 46), ((39, 'C'), 46), ((39, 'D'), 46), ((39, 'E'), 46), ((39, 'F'), 46), ((39, 'G'), 46), ((39, 'H'), 46), ((39, 'I'), 46), ((39, 'J'), 46), ((39, 'K'), 46), ((39, 'L'), 46), ((39, 'M'), 46), ((39, 'N'), 46), ((39, 'O'), 46), ((39, 'P'), 46), ((39, 'Q'), 46), ((39, 'R'), 46), ((39, 'S'), 46), ((39, 'T'), 46), ((39, 'U'), 46), ((39, 'V'), 46), ((39, 'W'), 46), ((39, 'X'), 46), ((39, 'Y'), 46), ((39, 'Z'), 46), ((39, '_'), 46), ((39, 'a'), 46), ((39, 'b'), 46), ((39, 'c'), 46), ((39, 'd'), 46), ((39, 'e'), 46), ((39, 'f'), 46), ((39, 'g'), 46), ((39, 'h'), 46), ((39, 'i'), 34), ((39, 'j'), 46), ((39, 'k'), 46), ((39, 'l'), 46), ((39, 'm'), 46), ((39, 'n'), 46), ((39, 'o'), 46), ((39, 'p'), 46), ((39, 'q'), 46), ((39, 'r'), 46), ((39, 's'), 46), ((39, 't'), 46), ((39, 'u'), 46), ((39, 'v'), 46), ((39, 'w'), 46), ((39, 'x'), 46), ((39, 'y'), 46), ((39, 'z'), 46)
            , ((40, '0'), 46), ((40, '1'), 46), ((40, '2'), 46), ((40, '3'), 46), ((40, '4'), 46), ((40, '5'), 46), ((40, '6'), 46), ((40, '7'), 46), ((40, '8'), 46), ((40, '9'), 46), ((40, 'A'), 46), ((40, 'B'), 46), ((40, 'C'), 46), ((40, 'D'), 46), ((40, 'E'), 46), ((40, 'F'), 46), ((40, 'G'), 46), ((40, 'H'), 46), ((40, 'I'), 46), ((40, 'J'), 46), ((40, 'K'), 46), ((40, 'L'), 46), ((40, 'M'), 46), ((40, 'N'), 46), ((40, 'O'), 46), ((40, 'P'), 46), ((40, 'Q'), 46), ((40, 'R'), 46), ((40, 'S'), 46), ((40, 'T'), 46), ((40, 'U'), 46), ((40, 'V'), 46), ((40, 'W'), 46), ((40, 'X'), 46), ((40, 'Y'), 46), ((40, 'Z'), 46), ((40, '_'), 46), ((40, 'a'), 46), ((40, 'b'), 46), ((40, 'c'), 46), ((40, 'd'), 46), ((40, 'e'), 46), ((40, 'f'), 46), ((40, 'g'), 46), ((40, 'h'), 46), ((40, 'i'), 46), ((40, 'j'), 46), ((40, 'k'), 46), ((40, 'l'), 46), ((40, 'm'), 46), ((40, 'n'), 35), ((40, 'o'), 46), ((40, 'p'), 46), ((40, 'q'), 46), ((40, 'r'), 46), ((40, 's'), 46), ((40, 't'), 46), ((40, 'u'), 46), ((40, 'v'), 46), ((40, 'w'), 46), ((40, 'x'), 46), ((40, 'y'), 46), ((40, 'z'), 46)
            , ((41, '0'), 46), ((41, '1'), 46), ((41, '2'), 46), ((41, '3'), 46), ((41, '4'), 46), ((41, '5'), 46), ((41, '6'), 46), ((41, '7'), 46), ((41, '8'), 46), ((41, '9'), 46), ((41, 'A'), 46), ((41, 'B'), 46), ((41, 'C'), 46), ((41, 'D'), 46), ((41, 'E'), 46), ((41, 'F'), 46), ((41, 'G'), 46), ((41, 'H'), 46), ((41, 'I'), 46), ((41, 'J'), 46), ((41, 'K'), 46), ((41, 'L'), 46), ((41, 'M'), 46), ((41, 'N'), 46), ((41, 'O'), 46), ((41, 'P'), 46), ((41, 'Q'), 46), ((41, 'R'), 46), ((41, 'S'), 46), ((41, 'T'), 46), ((41, 'U'), 46), ((41, 'V'), 46), ((41, 'W'), 46), ((41, 'X'), 46), ((41, 'Y'), 46), ((41, 'Z'), 46), ((41, '_'), 46), ((41, 'a'), 46), ((41, 'b'), 46), ((41, 'c'), 46), ((41, 'd'), 46), ((41, 'e'), 46), ((41, 'f'), 46), ((41, 'g'), 46), ((41, 'h'), 46), ((41, 'i'), 46), ((41, 'j'), 46), ((41, 'k'), 46), ((41, 'l'), 46), ((41, 'm'), 46), ((41, 'n'), 46), ((41, 'o'), 46), ((41, 'p'), 36), ((41, 'q'), 46), ((41, 'r'), 46), ((41, 's'), 46), ((41, 't'), 46), ((41, 'u'), 46), ((41, 'v'), 46), ((41, 'w'), 46), ((41, 'x'), 46), ((41, 'y'), 46), ((41, 'z'), 46)
            , ((42, '0'), 46), ((42, '1'), 46), ((42, '2'), 46), ((42, '3'), 46), ((42, '4'), 46), ((42, '5'), 46), ((42, '6'), 46), ((42, '7'), 46), ((42, '8'), 46), ((42, '9'), 46), ((42, 'A'), 46), ((42, 'B'), 46), ((42, 'C'), 46), ((42, 'D'), 46), ((42, 'E'), 46), ((42, 'F'), 46), ((42, 'G'), 46), ((42, 'H'), 46), ((42, 'I'), 46), ((42, 'J'), 46), ((42, 'K'), 46), ((42, 'L'), 46), ((42, 'M'), 46), ((42, 'N'), 46), ((42, 'O'), 46), ((42, 'P'), 46), ((42, 'Q'), 46), ((42, 'R'), 46), ((42, 'S'), 46), ((42, 'T'), 46), ((42, 'U'), 46), ((42, 'V'), 46), ((42, 'W'), 46), ((42, 'X'), 46), ((42, 'Y'), 46), ((42, 'Z'), 46), ((42, '_'), 46), ((42, 'a'), 46), ((42, 'b'), 46), ((42, 'c'), 46), ((42, 'd'), 46), ((42, 'e'), 46), ((42, 'f'), 46), ((42, 'g'), 37), ((42, 'h'), 46), ((42, 'i'), 46), ((42, 'j'), 46), ((42, 'k'), 46), ((42, 'l'), 46), ((42, 'm'), 46), ((42, 'n'), 46), ((42, 'o'), 46), ((42, 'p'), 46), ((42, 'q'), 46), ((42, 'r'), 46), ((42, 's'), 46), ((42, 't'), 46), ((42, 'u'), 46), ((42, 'v'), 46), ((42, 'w'), 46), ((42, 'x'), 46), ((42, 'y'), 46), ((42, 'z'), 46)
            , ((43, '0'), 46), ((43, '1'), 46), ((43, '2'), 46), ((43, '3'), 46), ((43, '4'), 46), ((43, '5'), 46), ((43, '6'), 46), ((43, '7'), 46), ((43, '8'), 46), ((43, '9'), 46), ((43, 'A'), 46), ((43, 'B'), 46), ((43, 'C'), 46), ((43, 'D'), 46), ((43, 'E'), 46), ((43, 'F'), 46), ((43, 'G'), 46), ((43, 'H'), 46), ((43, 'I'), 46), ((43, 'J'), 46), ((43, 'K'), 46), ((43, 'L'), 46), ((43, 'M'), 46), ((43, 'N'), 46), ((43, 'O'), 46), ((43, 'P'), 46), ((43, 'Q'), 46), ((43, 'R'), 46), ((43, 'S'), 46), ((43, 'T'), 46), ((43, 'U'), 46), ((43, 'V'), 46), ((43, 'W'), 46), ((43, 'X'), 46), ((43, 'Y'), 46), ((43, 'Z'), 46), ((43, '_'), 46), ((43, 'a'), 46), ((43, 'b'), 46), ((43, 'c'), 46), ((43, 'd'), 46), ((43, 'e'), 46), ((43, 'f'), 46), ((43, 'g'), 46), ((43, 'h'), 46), ((43, 'i'), 46), ((43, 'j'), 46), ((43, 'k'), 46), ((43, 'l'), 46), ((43, 'm'), 46), ((43, 'n'), 46), ((43, 'o'), 46), ((43, 'p'), 46), ((43, 'q'), 46), ((43, 'r'), 38), ((43, 's'), 46), ((43, 't'), 46), ((43, 'u'), 46), ((43, 'v'), 46), ((43, 'w'), 46), ((43, 'x'), 46), ((43, 'y'), 41), ((43, 'z'), 46)
            , ((44, '0'), 46), ((44, '1'), 46), ((44, '2'), 46), ((44, '3'), 46), ((44, '4'), 46), ((44, '5'), 46), ((44, '6'), 46), ((44, '7'), 46), ((44, '8'), 46), ((44, '9'), 46), ((44, 'A'), 46), ((44, 'B'), 46), ((44, 'C'), 46), ((44, 'D'), 46), ((44, 'E'), 46), ((44, 'F'), 46), ((44, 'G'), 46), ((44, 'H'), 46), ((44, 'I'), 46), ((44, 'J'), 46), ((44, 'K'), 46), ((44, 'L'), 46), ((44, 'M'), 46), ((44, 'N'), 46), ((44, 'O'), 46), ((44, 'P'), 46), ((44, 'Q'), 46), ((44, 'R'), 46), ((44, 'S'), 46), ((44, 'T'), 46), ((44, 'U'), 46), ((44, 'V'), 46), ((44, 'W'), 46), ((44, 'X'), 46), ((44, 'Y'), 46), ((44, 'Z'), 46), ((44, '_'), 46), ((44, 'a'), 39), ((44, 'b'), 46), ((44, 'c'), 46), ((44, 'd'), 46), ((44, 'e'), 46), ((44, 'f'), 46), ((44, 'g'), 46), ((44, 'h'), 46), ((44, 'i'), 46), ((44, 'j'), 46), ((44, 'k'), 46), ((44, 'l'), 46), ((44, 'm'), 46), ((44, 'n'), 46), ((44, 'o'), 46), ((44, 'p'), 46), ((44, 'q'), 46), ((44, 'r'), 46), ((44, 's'), 46), ((44, 't'), 46), ((44, 'u'), 46), ((44, 'v'), 46), ((44, 'w'), 46), ((44, 'x'), 46), ((44, 'y'), 46), ((44, 'z'), 46)
            , ((45, '0'), 46), ((45, '1'), 46), ((45, '2'), 46), ((45, '3'), 46), ((45, '4'), 46), ((45, '5'), 46), ((45, '6'), 46), ((45, '7'), 46), ((45, '8'), 46), ((45, '9'), 46), ((45, 'A'), 46), ((45, 'B'), 46), ((45, 'C'), 46), ((45, 'D'), 46), ((45, 'E'), 46), ((45, 'F'), 46), ((45, 'G'), 46), ((45, 'H'), 46), ((45, 'I'), 46), ((45, 'J'), 46), ((45, 'K'), 46), ((45, 'L'), 46), ((45, 'M'), 46), ((45, 'N'), 46), ((45, 'O'), 46), ((45, 'P'), 46), ((45, 'Q'), 46), ((45, 'R'), 46), ((45, 'S'), 46), ((45, 'T'), 46), ((45, 'U'), 46), ((45, 'V'), 46), ((45, 'W'), 46), ((45, 'X'), 46), ((45, 'Y'), 46), ((45, 'Z'), 46), ((45, '_'), 46), ((45, 'a'), 46), ((45, 'b'), 46), ((45, 'c'), 46), ((45, 'd'), 46), ((45, 'e'), 46), ((45, 'f'), 46), ((45, 'g'), 46), ((45, 'h'), 46), ((45, 'i'), 40), ((45, 'j'), 46), ((45, 'k'), 46), ((45, 'l'), 46), ((45, 'm'), 46), ((45, 'n'), 46), ((45, 'o'), 46), ((45, 'p'), 46), ((45, 'q'), 46), ((45, 'r'), 46), ((45, 's'), 46), ((45, 't'), 46), ((45, 'u'), 46), ((45, 'v'), 46), ((45, 'w'), 46), ((45, 'x'), 46), ((45, 'y'), 46), ((45, 'z'), 46)
            , ((46, '0'), 46), ((46, '1'), 46), ((46, '2'), 46), ((46, '3'), 46), ((46, '4'), 46), ((46, '5'), 46), ((46, '6'), 46), ((46, '7'), 46), ((46, '8'), 46), ((46, '9'), 46), ((46, 'A'), 46), ((46, 'B'), 46), ((46, 'C'), 46), ((46, 'D'), 46), ((46, 'E'), 46), ((46, 'F'), 46), ((46, 'G'), 46), ((46, 'H'), 46), ((46, 'I'), 46), ((46, 'J'), 46), ((46, 'K'), 46), ((46, 'L'), 46), ((46, 'M'), 46), ((46, 'N'), 46), ((46, 'O'), 46), ((46, 'P'), 46), ((46, 'Q'), 46), ((46, 'R'), 46), ((46, 'S'), 46), ((46, 'T'), 46), ((46, 'U'), 46), ((46, 'V'), 46), ((46, 'W'), 46), ((46, 'X'), 46), ((46, 'Y'), 46), ((46, 'Z'), 46), ((46, '_'), 46), ((46, 'a'), 46), ((46, 'b'), 46), ((46, 'c'), 46), ((46, 'd'), 46), ((46, 'e'), 46), ((46, 'f'), 46), ((46, 'g'), 46), ((46, 'h'), 46), ((46, 'i'), 46), ((46, 'j'), 46), ((46, 'k'), 46), ((46, 'l'), 46), ((46, 'm'), 46), ((46, 'n'), 46), ((46, 'o'), 46), ((46, 'p'), 46), ((46, 'q'), 46), ((46, 'r'), 46), ((46, 's'), 46), ((46, 't'), 46), ((46, 'u'), 46), ((46, 'v'), 46), ((46, 'w'), 46), ((46, 'x'), 46), ((46, 'y'), 46), ((46, 'z'), 46)
            , ((48, '0'), 48), ((48, '1'), 48), ((48, '2'), 48), ((48, '3'), 48), ((48, '4'), 48), ((48, '5'), 48), ((48, '6'), 48), ((48, '7'), 48), ((48, '8'), 48), ((48, '9'), 48), ((48, 'A'), 48), ((48, 'B'), 48), ((48, 'C'), 48), ((48, 'D'), 48), ((48, 'E'), 48), ((48, 'F'), 48), ((48, 'G'), 48), ((48, 'H'), 48), ((48, 'I'), 48), ((48, 'J'), 48), ((48, 'K'), 48), ((48, 'L'), 48), ((48, 'M'), 48), ((48, 'N'), 48), ((48, 'O'), 48), ((48, 'P'), 48), ((48, 'Q'), 48), ((48, 'R'), 48), ((48, 'S'), 48), ((48, 'T'), 48), ((48, 'U'), 48), ((48, 'V'), 48), ((48, 'W'), 48), ((48, 'X'), 48), ((48, 'Y'), 48), ((48, 'Z'), 48), ((48, '_'), 48), ((48, 'a'), 48), ((48, 'b'), 48), ((48, 'c'), 48), ((48, 'd'), 48), ((48, 'e'), 48), ((48, 'f'), 48), ((48, 'g'), 48), ((48, 'h'), 48), ((48, 'i'), 48), ((48, 'j'), 48), ((48, 'k'), 48), ((48, 'l'), 48), ((48, 'm'), 48), ((48, 'n'), 48), ((48, 'o'), 48), ((48, 'p'), 48), ((48, 'q'), 48), ((48, 'r'), 48), ((48, 's'), 48), ((48, 't'), 48), ((48, 'u'), 48), ((48, 'v'), 48), ((48, 'w'), 48), ((48, 'x'), 48), ((48, 'y'), 48), ((48, 'z'), 48)
            , ((49, '0'), 49), ((49, '1'), 49), ((49, '2'), 49), ((49, '3'), 49), ((49, '4'), 49), ((49, '5'), 49), ((49, '6'), 49), ((49, '7'), 49), ((49, '8'), 49), ((49, '9'), 49)
            , ((52, '\n'), 52), ((52, ' '), 52)
            , ((53, ' '), 53), ((53, '!'), 53), ((53, '"'), 53), ((53, '#'), 53), ((53, '$'), 53), ((53, '%'), 53), ((53, '&'), 53), ((53, '\''), 53), ((53, '('), 53), ((53, ')'), 53), ((53, '*'), 53), ((53, '+'), 53), ((53, ','), 53), ((53, '-'), 53), ((53, '.'), 53), ((53, '/'), 53), ((53, '0'), 53), ((53, '1'), 53), ((53, '2'), 53), ((53, '3'), 53), ((53, '4'), 53), ((53, '5'), 53), ((53, '6'), 53), ((53, '7'), 53), ((53, '8'), 53), ((53, '9'), 53), ((53, ':'), 53), ((53, ';'), 53), ((53, '<'), 53), ((53, '='), 53), ((53, '>'), 53), ((53, '?'), 53), ((53, '@'), 53), ((53, 'A'), 53), ((53, 'B'), 53), ((53, 'C'), 53), ((53, 'D'), 53), ((53, 'E'), 53), ((53, 'F'), 53), ((53, 'G'), 53), ((53, 'H'), 53), ((53, 'I'), 53), ((53, 'J'), 53), ((53, 'K'), 53), ((53, 'L'), 53), ((53, 'M'), 53), ((53, 'N'), 53), ((53, 'O'), 53), ((53, 'P'), 53), ((53, 'Q'), 53), ((53, 'R'), 53), ((53, 'S'), 53), ((53, 'T'), 53), ((53, 'U'), 53), ((53, 'V'), 53), ((53, 'W'), 53), ((53, 'X'), 53), ((53, 'Y'), 53), ((53, 'Z'), 53), ((53, '['), 53), ((53, '\\'), 53), ((53, ']'), 53), ((53, '^'), 53), ((53, '_'), 53), ((53, '`'), 53), ((53, 'a'), 53), ((53, 'b'), 53), ((53, 'c'), 53), ((53, 'd'), 53), ((53, 'e'), 53), ((53, 'f'), 53), ((53, 'g'), 53), ((53, 'h'), 53), ((53, 'i'), 53), ((53, 'j'), 53), ((53, 'k'), 53), ((53, 'l'), 53), ((53, 'm'), 53), ((53, 'n'), 53), ((53, 'o'), 53), ((53, 'p'), 53), ((53, 'q'), 53), ((53, 'r'), 53), ((53, 's'), 53), ((53, 't'), 53), ((53, 'u'), 53), ((53, 'v'), 53), ((53, 'w'), 53), ((53, 'x'), 53), ((53, 'y'), 53), ((53, 'z'), 53), ((53, '{'), 53), ((53, '|'), 53), ((53, '}'), 53), ((53, '~'), 53)
            ]
        , getMarkedQsOfDFA = XMap.fromAscList []
        }
    runDFA :: DFA -> (ch -> Char) -> [ch] -> ((Maybe Int, [ch]), [ch])
    runDFA (DFA q0 qfs deltas markeds) toChar = XIdentity.runIdentity . go where
        loop1 q buffer [] = return buffer
        loop1 q buffer (ch : str) = do
            case XMap.lookup (q, toChar ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case XMap.lookup p qfs of
                    Nothing -> loop1 p (buffer ++ [ch]) str
                    latest' -> do
                        (latest, accepted) <- XState.get
                        XState.put (latest', accepted ++ buffer ++ [ch])
                        loop1 p [] str
        loop2 qs q [] buffer = return buffer
        loop2 qs q (ch : str) buffer = do
            case XMap.lookup (q, toChar ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop2 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        loop2 qs p str []
        go input = do
            (rest, (latest, accepted)) <- XState.runStateT (loop1 q0 [] input) (Nothing, [])
            case latest >>= flip XMap.lookup markeds of
                Nothing -> return ((latest, accepted), rest)
                Just qs -> do
                    (rest', accepted') <- XState.runStateT (loop2 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
    addLoc :: Int -> Int -> String -> [((Int, Int), Char)]
    addLoc _ _ [] = []
    addLoc row col (ch : chs) = if ch == '\n' then ((row, col), ch) : addLoc (row + 1) 1 chs else ((row, col), ch) : addLoc row (col + 1) chs
    doLexing :: [((Int, Int), Char)] -> Either (Int, Int) [Token]
    doLexing [] = return []
    doLexing str0 = do
        let returnJust = return . Just
        (str1, piece) <- case runDFA theDFA snd str0 of
            ((_, []), _) -> Left (fst (head str0))
            ((Just label, accepted), rest) -> return (rest, ((label, map snd accepted), (fst (head accepted), fst (head (reverse accepted)))))
            _ -> Left (fst (head str0))
        maybe_token <- case piece of
            ((1, this), ((row1, col1), (row2, col2))) -> returnJust (T_dot (SLoc (row1, col1) (row2, col2)))
            ((2, this), ((row1, col1), (row2, col2))) -> returnJust (T_arrow (SLoc (row1, col1) (row2, col2)))
            ((3, this), ((row1, col1), (row2, col2))) -> returnJust (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((4, this), ((row1, col1), (row2, col2))) -> returnJust (T_lparen (SLoc (row1, col1) (row2, col2)))
            ((5, this), ((row1, col1), (row2, col2))) -> returnJust (T_rparen (SLoc (row1, col1) (row2, col2)))
            ((6, this), ((row1, col1), (row2, col2))) -> returnJust (T_lbracket (SLoc (row1, col1) (row2, col2)))
            ((7, this), ((row1, col1), (row2, col2))) -> returnJust (T_rbracket (SLoc (row1, col1) (row2, col2)))
            ((8, this), ((row1, col1), (row2, col2))) -> returnJust (T_quest (SLoc (row1, col1) (row2, col2)))
            ((9, this), ((row1, col1), (row2, col2))) -> returnJust (T_comma (SLoc (row1, col1) (row2, col2)))
            ((10, this), ((row1, col1), (row2, col2))) -> returnJust (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((11, this), ((row1, col1), (row2, col2))) -> returnJust (T_if (SLoc (row1, col1) (row2, col2)))
            ((12, this), ((row1, col1), (row2, col2))) -> returnJust (T_succ (SLoc (row1, col1) (row2, col2)))
            ((13, this), ((row1, col1), (row2, col2))) -> returnJust (T_pi (SLoc (row1, col1) (row2, col2)))
            ((14, this), ((row1, col1), (row2, col2))) -> returnJust (T_sigma (SLoc (row1, col1) (row2, col2)))
            ((15, this), ((row1, col1), (row2, col2))) -> returnJust (T_cut (SLoc (row1, col1) (row2, col2)))
            ((16, this), ((row1, col1), (row2, col2))) -> returnJust (T_true (SLoc (row1, col1) (row2, col2)))
            ((17, this), ((row1, col1), (row2, col2))) -> returnJust (T_fail (SLoc (row1, col1) (row2, col2)))
            ((18, this), ((row1, col1), (row2, col2))) -> returnJust (T_bslash (SLoc (row1, col1) (row2, col2)))
            ((19, this), ((row1, col1), (row2, col2))) -> returnJust (T_cons (SLoc (row1, col1) (row2, col2)))
            ((20, this), ((row1, col1), (row2, col2))) -> returnJust (T_kind (SLoc (row1, col1) (row2, col2)))
            ((21, this), ((row1, col1), (row2, col2))) -> returnJust (T_type (SLoc (row1, col1) (row2, col2)))
            ((22, this), ((row1, col1), (row2, col2))) -> returnJust (T_smallid (SLoc (row1, col1) (row2, col2)) this)
            ((23, this), ((row1, col1), (row2, col2))) -> returnJust (T_largeid (SLoc (row1, col1) (row2, col2)) this)
            ((24, this), ((row1, col1), (row2, col2))) -> returnJust (T_nat_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((25, this), ((row1, col1), (row2, col2))) -> returnJust (T_str_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((26, this), ((row1, col1), (row2, col2))) -> returnJust (T_chr_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((27, this), ((row1, col1), (row2, col2))) -> return Nothing
            ((28, this), ((row1, col1), (row2, col2))) -> return Nothing
        fmap (maybe id (:) maybe_token) (doLexing str1)

